Why does it take so long to get software finished?

    * Due to the complexity, changing requirements, need for testing, and
communication overhead. 
    * There is a constant growth in software/technology in modern society, 
and with that is a growth in comlexity. Millions of lines of code need to be
able to work together SEAMLESSLY.
    * On top of that requirements are ALWAYS changing, then not to long after 
that testing will commence to make sure the product works as it should. To find 
as many bugs as possible before the drop date.
    * all of this requires a big team, and with an influx of people, there is 
coordination that needs to happen. Especially with agreeing on one thing. This 
can drastically slow progress.


Why are development costs so high?

    * Firstly, skilled workers cost money. You have to pay them what they are 
worth for the extensive work they do. Then testing/debugging itself is expensive. 
    * When it comes to development cost you also have to account for tools and
infrastructure, along with customization.


Why can't we find all errors before we give the software to our customers?

    * The product definitely has to go out in the real world and be used for 
more bugs to show up. It is human error that helps bring out mistakes, or just 
unknown problems. Of course the workers testing process is a screening for bugs, 
but that is only for what they are able to catch and find. There will ALWAYS be 
more once humans interact. Things unthought of by workers can be found by the 
general public.


Why do we spend so much time and effort maintaining existing programs?

    * This is to avoid deterioration from a software being modified over time. 
Completely destroying the system as a whole. 
    * another idea is Legacy systems. Which as we know is an older system so it 
could lack the proper documentation. And update could be extremely riskier along 
with harder to even start.
    * We also have Bug fixes and Adapting to change. Meaning, post development 
errors and software evolution that must occur.


Why do we continue to have difficulty in measuring progress, 
        as software is being developed and maintained?
        
    * progress measurments become dificult during maintenance because work is 
currently focused on fixing issues rather that creating new functions.
    * Other reasons have to do with Intangibility 
(unable to gauge the "completeness"), Unpredictable issues, Varying task effort 
(fixing bugs or integrating features), and Poor Metrics 
(tradition metrics dont actually guage progress made)


References

Pressman, R. S., & Maxim, B. R. (2020). Software engineering: A practitioner's approach (9th ed.). McGraw-Hill Education.

Challenges in large-scale agile software development projects. (n.d.). IEEE Xplore. Retrieved December 14, 2024, from https://ieeexplore.ieee.org

Risks and challenges of component-based software development. (n.d.). Communications of the ACM. Retrieved December 14, 2024, from https://cacm.acm.org